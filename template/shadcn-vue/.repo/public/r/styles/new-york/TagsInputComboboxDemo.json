{
  "name": "TagsInputComboboxDemo",
  "type": "registry:example",
  "dependencies": [
    "reka-ui"
  ],
  "registryDependencies": [
    "combobox",
    "tags-input"
  ],
  "files": [
    {
      "path": "examples/TagsInputComboboxDemo.vue",
      "content": "<script setup lang=\"ts\">\nimport { useFilter } from 'reka-ui'\nimport { computed, ref } from 'vue'\nimport { Combobox, ComboboxAnchor, ComboboxEmpty, ComboboxGroup, ComboboxInput, ComboboxItem, ComboboxList } from '@/registry/new-york/ui/combobox'\nimport { TagsInput, TagsInputInput, TagsInputItem, TagsInputItemDelete, TagsInputItemText } from '@/registry/new-york/ui/tags-input'\n\nconst frameworks = [\n  { value: 'next.js', label: 'Next.js' },\n  { value: 'sveltekit', label: 'SvelteKit' },\n  { value: 'nuxt', label: 'Nuxt' },\n  { value: 'remix', label: 'Remix' },\n  { value: 'astro', label: 'Astro' },\n]\n\nconst modelValue = ref<string[]>([])\nconst open = ref(false)\nconst searchTerm = ref('')\n\nconst { contains } = useFilter({ sensitivity: 'base' })\nconst filteredFrameworks = computed(() => {\n  const options = frameworks.filter(i => !modelValue.value.includes(i.label))\n  return searchTerm.value ? options.filter(option => contains(option.label, searchTerm.value)) : options\n})\n</script>\n\n<template>\n  <Combobox v-model=\"modelValue\" v-model:open=\"open\" :ignore-filter=\"true\">\n    <ComboboxAnchor as-child>\n      <TagsInput v-model=\"modelValue\" class=\"px-2 gap-2 w-80\">\n        <div class=\"flex gap-2 flex-wrap items-center\">\n          <TagsInputItem v-for=\"item in modelValue\" :key=\"item\" :value=\"item\">\n            <TagsInputItemText />\n            <TagsInputItemDelete />\n          </TagsInputItem>\n        </div>\n\n        <ComboboxInput v-model=\"searchTerm\" as-child>\n          <TagsInputInput placeholder=\"Framework...\" class=\"min-w-[200px] w-full p-0 border-none focus-visible:ring-0 h-auto\" @keydown.enter.prevent />\n        </ComboboxInput>\n      </TagsInput>\n\n      <ComboboxList class=\"w-[--reka-popper-anchor-width]\">\n        <ComboboxEmpty />\n        <ComboboxGroup>\n          <ComboboxItem\n            v-for=\"framework in filteredFrameworks\" :key=\"framework.value\" :value=\"framework.label\"\n            @select.prevent=\"(ev) => {\n\n              if (typeof ev.detail.value === 'string') {\n                searchTerm = ''\n                modelValue.push(ev.detail.value)\n              }\n\n              if (filteredFrameworks.length === 0) {\n                open = false\n              }\n            }\"\n          >\n            {{ framework.label }}\n          </ComboboxItem>\n        </ComboboxGroup>\n      </ComboboxList>\n    </ComboboxAnchor>\n  </Combobox>\n</template>\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
