{
  "name": "CardChat",
  "type": "registry:example",
  "dependencies": [],
  "registryDependencies": [
    "avatar",
    "button",
    "card",
    "command",
    "dialog",
    "input",
    "tooltip"
  ],
  "files": [
    {
      "path": "examples/CardChat.vue",
      "content": "<script setup lang=\"ts\">\nimport { Check, Plus, Send } from 'lucide-vue-next'\nimport { computed, ref } from 'vue'\nimport { cn } from '@/lib/utils'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/registry/new-york/ui/avatar'\nimport { Button } from '@/registry/new-york/ui/button'\n\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n} from '@/registry/new-york/ui/card'\nimport { Command, CommandEmpty, CommandGroup, CommandInput, CommandItem, CommandList } from '@/registry/new-york/ui/command'\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle } from '@/registry/new-york/ui/dialog'\nimport { Input } from '@/registry/new-york/ui/input'\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/registry/new-york/ui/tooltip'\n\nconst input = ref('')\nconst inputLength = computed(() => input.value.trim().length)\nconst users = ref([\n  {\n    name: 'Olivia Martin',\n    email: 'm@example.com',\n    avatar: '/avatars/01.png',\n  },\n  {\n    name: 'Isabella Nguyen',\n    email: 'isabella.nguyen@email.com',\n    avatar: '/avatars/03.png',\n  },\n  {\n    name: 'Emma Wilson',\n    email: 'emma@example.com',\n    avatar: '/avatars/05.png',\n  },\n  {\n    name: 'Jackson Lee',\n    email: 'lee@example.com',\n    avatar: '/avatars/02.png',\n  },\n  {\n    name: 'William Kim',\n    email: 'will@email.com',\n    avatar: '/avatars/04.png',\n  },\n])\n\ntype User = (typeof users.value)[number]\n\nconst messages = ref([\n  { role: 'agent', content: 'Hi, how can I help you today?' },\n  { role: 'user', content: 'Hey, I\\'m having trouble with my account.' },\n  { role: 'agent', content: 'What seems to be the problem?' },\n  { role: 'user', content: 'I can\\'t log in.' },\n])\n\nconst open = ref(false)\nconst selectedUsers = ref<User[]>([])\n</script>\n\n<template>\n  <Card>\n    <CardHeader class=\"flex flex-row items-center justify-between\">\n      <div class=\"flex items-center space-x-4\">\n        <Avatar>\n          <AvatarImage src=\"/avatars/01.png\" alt=\"Image\" />\n          <AvatarFallback>OM</AvatarFallback>\n        </Avatar>\n        <div>\n          <p class=\"text-sm font-medium leading-none\">\n            Sofia Davis\n          </p>\n          <p class=\"text-sm text-muted-foreground\">\n            m@example.com\n          </p>\n        </div>\n      </div>\n      <TooltipProvider>\n        <Tooltip :delay-duration=\"200\">\n          <TooltipTrigger as-child>\n            <Button\n              variant=\"outline\"\n              class=\"rounded-full p-2.5 flex items-center justify-center\"\n              @click=\"open = true\"\n            >\n              <Plus class=\"w-4 h-4\" />\n            </Button>\n          </TooltipTrigger>\n          <TooltipContent :side-offset=\"10\">\n            New message\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n    </CardHeader>\n    <CardContent>\n      <div class=\"space-y-4\">\n        <div\n          v-for=\"(message, index) in messages\"\n          :key=\"index\"\n          :class=\"cn(\n            'flex w-max max-w-[75%] flex-col gap-2 rounded-lg px-3 py-2 text-sm',\n            message.role === 'user' ? 'ml-auto bg-primary text-primary-foreground' : 'bg-muted',\n          )\"\n        >\n          {{ message.content }}\n        </div>\n      </div>\n    </CardContent>\n    <CardFooter>\n      <form\n        class=\"flex w-full items-center space-x-2\"\n        @submit.prevent=\"() => {\n          if (inputLength === 0) return\n          messages.push({\n            role: 'user',\n            content: input,\n          })\n          input = ''\n        }\"\n      >\n        <Input v-model=\"input\" placeholder=\"Type a message...\" class=\"flex-1\" />\n        <Button class=\"p-2.5 flex items-center justify-center\" :disabled=\"inputLength === 0\">\n          <Send class=\"w-4 h-4\" />\n          <span class=\"sr-only\">Send</span>\n        </Button>\n      </form>\n    </CardFooter>\n  </Card>\n\n  <Dialog v-model:open=\"open\">\n    <DialogContent class=\"gap-0 p-0 outline-none\">\n      <DialogHeader class=\"px-4 pb-4 pt-5\">\n        <DialogTitle>New message</DialogTitle>\n        <DialogDescription>\n          Invite a user to this thread. This will create a new group\n          message.\n        </DialogDescription>\n      </DialogHeader>\n      <Command class=\"overflow-hidden rounded-t-none border-t\">\n        <CommandInput placeholder=\"Search user...\" />\n        <CommandList>\n          <CommandEmpty>No users found.</CommandEmpty>\n          <CommandGroup class=\"p-2\">\n            <CommandItem\n              v-for=\"user in users\"\n              :key=\"user.email\"\n              :value=\"user\"\n              class=\"flex items-center px-2\"\n              @select=\"() => {\n                const index = selectedUsers.findIndex(u => u === user)\n                if (index !== -1) {\n                  selectedUsers.splice(index, 1)\n                }\n                else {\n                  selectedUsers.push(user)\n                }\n              }\"\n            >\n              <Avatar>\n                <AvatarImage :src=\"user.avatar\" alt=\"Image\" />\n                <AvatarFallback>{{ user.name[0] }}</AvatarFallback>\n              </Avatar>\n              <div class=\"ml-2\">\n                <p class=\"text-sm font-medium leading-none\">\n                  {{ user.name }}\n                </p>\n                <p class=\"text-sm text-muted-foreground\">\n                  {{ user.email }}\n                </p>\n              </div>\n              <Check v-if=\"selectedUsers.includes(user)\" class=\"ml-auto flex h-5 w-5 text-primary\" />\n            </CommandItem>\n          </CommandGroup>\n        </CommandList>\n      </Command>\n      <DialogFooter class=\"flex items-center border-t p-4 sm:justify-between\">\n        <div v-if=\"selectedUsers.length > 0\" class=\"flex -space-x-2 overflow-hidden\">\n          <Avatar\n            v-for=\"user in selectedUsers\"\n            :key=\"user.email\"\n            class=\"inline-block border-2 border-background\"\n          >\n            <AvatarImage :src=\"user.avatar\" />\n            <AvatarFallback>{{ user.name[0] }}</AvatarFallback>\n          </Avatar>\n        </div>\n\n        <p v-else class=\"text-sm text-muted-foreground\">\n          Select users to add to this thread.\n        </p>\n\n        <Button\n          :disabled=\"selectedUsers.length < 2\"\n          @click=\"open = false\"\n        >\n          Continue\n        </Button>\n      </DialogFooter>\n    </DialogContent>\n  </Dialog>\n</template>\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}
